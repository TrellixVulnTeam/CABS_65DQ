#parser,,,,,
prog,CABSdock,,,,
description,"CABSdock application is a versatile tool for molecular docking of peptides to proteins. It allows for flexible docking (also with large-scale conformational changes) and without knowledge about the binding site. CABSdock enables peptide docking using only information about the peptide sequence and the protein receptor structure. In addition to this input data, many advanced options are available that allow for manipulation of a simulation setup, a degree of protein flexibility or guiding the peptide binding etc.

CABSdock method has been first made available as a web server [Nucleic Acids Research, 43(W1): W419-W424, 2015; web server website: http://biocomp.chem.uw.edu.pl/CABSdock]. The standalone application version [submitted to publication] provides the same modeling methodology equipped with many additional features and customizable options.",,,,
epilog,CABSdock repository: https://bitbucket.org/lcbio/cabsdock,,,,
,,,,,
#group,BASIC OPTIONS,"Basic options allow to run protein-peptide docking using only information about the peptide sequence and the protein receptor structure. In addition to peptide sequence, a peptide secondary structure information may be provided.",,,
"-r, --receptor",RECEPTOR,"Loads receptor structure.

RECEPTOR can be either:

* PDB code (optionally with chain IDs)
i.e. '-r 1CE1:HL' loads chains H and L of 1CE1 receptor structure downloaded from the PDB database

* PDB file (optionally gzipped)",,,
"-p, --peptide",PEPTIDE,"Loads peptide sequence and optionally peptide secondary structure in one-letter code (can be used multiple times to add multiple peptides).

PEPTIDE can be either:

* amino acid sequence in one-letter code
(optionally annotated with secondary structure: H - helix, E - sheet, C - coil) 
i.e. '-p HKILHRLLQD:CHHHHHHHHC' loads HKILHRLLQD peptide sequence
with the secondary structure assignemnt: CHHHHHHHHC

HINT: If possible, it is always recommended to use secondary structure information/prediction. For residues with ambiguous secondary structure prediction assignment it is better to assign
coil (C) than the regular (H - helix or E - extended) type of structure.

* PDB code (optionally with chain ID) 
i.e. '-p 1CE1:P' loads the sequence of the chain P from 1CE1 receptor

* PDB file with peptide's coordinates, loads only a peptide sequence from a PDB file",,append,
,,,,,
#group,RECEPTOR OPTIONS,Receptor options allows to exclude some receptor residues from docking search and to manipulate the degree of protein receptor flexibility (using either --receptor-flexibility or --receptor-restraints),,,
"-e, --exclude",RESIDUES,"Excludes receptor residues listed in RESIDUES from the docking search, therefore enforces more effective search in other areas of a receptor surface, for example, it may be known that some parts of the protein are not accessible to peptide (due to binding to other proteins) and therefore it could be useful to exclude these regions from the search procedure.

RESIDUES must be a single string of characters (no whitespaces) consisting of residue identifiers (i. e. 123:A) or chain identifiers (i. e. A) joined with the '+' sign. '-' is also allowed to specify a continous range of residues, or chains.

Examples:
'-e 123:A'                     excludes residue 123 from chain A
'-e 123:A+125:A'                        residues 123 and 125 from chain A
'-e 123:A-125:A'                        residues 123, 124 and 125 from chain A
'-e A'                                  whole chain A
'-e A+C'                                chains A and C
'-e A-C'                                chains A, B and C


Adding @PEP<N> at the end of the string limits the excluding to only N-th peptide
i.e. -e 123:A@PEP1 will exclude residue 123 in chain A for binding with the first peptide only. If @PEP<N> is omitted the exclusion list affects all peptides.

This option can be used multiple times to add multiple sets of excluded residues.",,append,
--excluding-distance,DISTANCE,Sets minimum distance between side chain atoms of peptide(s) and receptor residues marked as 'excluded',5.0,,float
"-f, --receptor-flexibility",FLEXIBILITY,"Modifies flexibility of selected receptor's residues:

0 - fully flexible backbone
1 - almost stiff backbone (default value, given appropriate number of receptor restraints)
> 1 - increasing stiffnes

FLEXIBILITY can be either:

* positive real number - all receptor residues are assigned the same flexiblity equal that number

* bf - flexibility for each residue is read from the beta factor column of the CA atom in the pdb input file (Note that standard beta factor in pdb file has opposite meaning to CABSdock flexibillity, edit pdb accordingly or use FLEXIBILITY = 'bfi'),

* bfi - flexibility is assigned from the inverted beta factors in the input pdb file so that bf = 0.0 -> f = 1.0 and bf >= 1.0 -> f = 0.0

* <filename> - flexibility is read from file <filename> in the format of single residue entries: resid_ID <flexibility> i.e. 12:A 0.75, or residue ranges: resid_ID - resid_ID <flexibility> i.e. 12:A - 15:A  0.75

Default value for residues not explicitely specified can be set by inserting at the top of the file a following line: default <default flexibility value>, if ommited default is 1.0

multiple entries can be used.",1.0,,
"-R, --receptor-restraints",MODE GAP MIN MAX,"Allows to generate a set of binary distance restraints for C-alpha atoms, that keep the receptor in predefined conformation.

MODE can be either:

* 'all' - generate restraints for all receptor residues
* 'ss1' - generate restraints only when at least one restrained residue is assigned regular secondary
           structure (helix or sheet)
* 'ss2' - generate restraints only when both restrained residues are assigned regular secondary
           structure (helix, sheet)

GAP specifies gap along the main chain for two resiudes to be restrained
MIN and MAX are min and max values in Angstroms for two residues to be restrained",all 5 5.0 15.0,,
,,,,,
#group,PEPTIDE OPTIONS,"Peptide options, apart from providing peptide sequence, allows to introduce starting peptide conformations and locations (when these additional options are not used, starting peptide conformations and locations are random)",,,
"-P, --add-peptide",PEPTIDE CONFORMATION LOCATION,"Add peptide to the complex. This option can be used multiple times to add multiple peptides.

PEPTIDE must be either:

* amino acid sequence in one-letter code (optionally annotated with secondary structure:
H - helix, E - sheet, C - coil) 
i.e. '-p HKILHRLLQD:CHHHHHHHHC' loads HKILHRLLQD peptide sequence with the secondary structure
assignemnt: CHHHHHHHHC

HINT: If possible, it is always recommended to use secondary structure information/prediction. For residues with ambiguous secondary structure prediction assignment it is better to assign coil (C) than the regular (H - helix or E - extended) type of structure.

* pdb file (may be gzipped)

* pdb code (optionally with chain_id i.e. 1abc:D)

CONFORMATION sets initial conformation of the peptide. Must be either:

* random - random conformation is provided [default]

* keep - preserve conformation from file. This has no effect if PEPTIDE=SEQUENCE.
    
LOCATION sets initial location for the peptide. Must be either:

* random - peptide is placed in a random location on the surface of a sphere centered at the receptor's geometrical center at distance defined by the '-s, --separation' option from the surface of the receptor.

* keep - preserve location from file. This has no effect if PEPTIDE=SEQUENCE

* patch - list of receptor's residues (i.e 123:A+125:A+17:B) Peptide will be placed above the geometrical center of listed residues at distance defined by the '-s, --separation' option from the surface of the receptor. WARNING: residues listed in path should be on the surface of the receptor and close to each other.",,append,
--separation,SEP,This option enables advanced settings of building starting conformations of modelled complexes (to be used only in specific protocols). The option sets separation distance in Angstroms between the peptide and the surface of the receptor (default: 20 Angstroms),20.0,,float
--insertion-clash,DIST,This option enables advanced settings of building starting conformations of modelled complexes. The option sets distance in Angstroms between any two atoms (of different modeled chains) at which a clash occurs while building initial complex (default: 1 Angstrom),1.0,,float
--insertion-attempts,NUM,This option enables advanced settings of building starting conformations of modelled complexes. The option sets number of attempts to insert peptide while building inital complex (default: 1000),1000,,int
,,,,,
#group,RESTRAINTS OPTIONS,"Restraints options allows to set up distance restraints, either between C-alpha atoms (CA) or Side Chains (SC), where SCs are geometric centers of side chains atoms (as defined in CABS coarse-grained
model).",,,
--ca-rest-add,RESI RESJ DIST WEIGHT,"Adds distance restraint between C-alpha (CA) atom in residue RESI and C-alpha atom in residue RESJ

DIST is a distance between these atoms and WEIGHT is restraint's weight from [0, 1].

In order to add restraints between the peptide and the receptor, or between two peptides, use PEP1, PEP2, ... as chain identifiers of the peptides (even when peptide is read from a pdb file its chain identifier is ignored).

i.e. ""123:A 5:PEP1 8.7 1.0"" adds restraint between the C-alpha atom of the residue number 123 in the chain A of the receptor and the C-alpha atom of the 5th residue of the peptide.

If you add only one peptide both 'PEP' and 'PEP1' is a valid chain identifier.

If you add multiple peptides they will be ordered as follows: [1] from config file added by the 'peptide' option [2] from config file added by the 'add-peptide' option [3] from command line added by the '-p, --peptide' option [4] from command line added by the '--add-peptide' option.

Peptides added by the same method preserve the order by which they appear in the config file, or on the command line.

Can be used multiple times to add multiple restraints.",,append,
--sc-rest-add,RESI RESJ DIST WEIGHT,"Adds distance restraint between SC pseudoatom in residue RESI and SC pseudoatom in residue RESJ; DIST is a distance between these pseudoatoms (geometric centers of side chain atoms) and WEIGHT is restraint's weight from [0, 1]. Can be used multiple times to add multiple restraints.",,append,
--ca-rest-weight,WEIGHT,Set global weight for all C-alpha restraints (including automatically generated restraints for the receptor),1.0,,float
--sc-rest-weight,WEIGHT,Set global weight for all SC restraints,1.0,,float
--ca-rest-file,FILE,Read C-alpha restraints from file (use multiple times to add multiple files),,append,
--sc-rest-file,FILE,Read SC restraints from file (use multiple times to add multiple files),,append,
,,,,,
#group,SIMULATION OPTIONS,Simulation options allow to modify different parameters of Replica Exchange Monte Carlo simulation procedure,,,
--mc-annealing,NUM,"sets number of Monte Carlo temperature annealing cycles to NUM (NUM > 0, default value = 20, changing default value is recommended only for advanced users). ",20,,int
--mc-cycles,NUM,"sets number of Monte Carlo cycles to NUM (NUM>0, default value = 50). Total number of snapshots generated for each replica/trajectory = [mc-annealing] x [mc-cycles], default: 20x50=1000. ",50,,int
--mc-steps,NUM,"sets number of Monte Carlo cycles between trajectory frames to NUM (NUM > 0, default value = 50). NUM = 1 means that every generated conformation will occur in trajectory. This option enables to increase the simulation length (between printed snapshots) and doesn't impact the number of snapshots in trajectories (see also --mc-steps description).",50,,int
--replicas,NUM,"sets number of replicas to be used in Replica Exchange Monte Carlo (NUM > 0, default value = 10, changing default value is recommended only for advanced users)",10,,int
--replicas-dtemp,DELTA,"sets temperature increment between replicas (DELTA > 0, default value = 0.5, changing default value is recommended only for advanced users)",0.5,,float
--temperature,TINIT TFINAL,"sets temperature range for simulated annealing TINIT - initial temperature, TFINAL - final temperature (default values TINIT=2.0, TFINAL=1.0, changing default value is recommended only for advanced users). CABSdock uses temperature units, which do not correspond straightforwardly to real temperatures. Temperature around 1.0 roughly corresponds to nearly frozen conformation, folding temperature of small proteins in the CABS model is usually around 2.0",2.0 1.0,,float
"-s, --random-seed",NUM,sets seed for random number generator.,,,int
,,,,,
#group,ALL-ATOM RECONSTRUCTION OPTIONS,"All-atom reconstruction options allow to set up details of all-atom reconstruction and refinement procedure, which is performed using MODELLER package",,,
--no-aa-rebuild,,skip the all-atom reconstruction. Saves CA models for the top scored binding poses instead.,,store_true,
--modeller-iterations,NUM,"Set number of iterations for reconstruction procedure in MODELLER package (default: 3). Bigger numbers may result in more accurate models, but reconstruction takes longer.",3,,int
,,,,,
#group,ANALYSIS OPTIONS,Analysis options allow to perform comparison analyses (to provided reference complex structure) and for repeated scoring and analysis of CABSdock trajectories,,,
--reference-pdb,PDB,"Load reference complex structure. This option allows for comparison with the reference complex structure and triggers additional analysis features

PDB must be either:

* [pdb code]:[receptor chains]:[peptide(s) chain(s)]
* [pdb file]:[receptor chains]:[peptide(s) chain(s)]

i.e 1abc:AB:C, 1abc:AB:CD, myfile.pdb:AB:C, myfile.pdb.gz:AB:CDE",,,
--clustering-iterations,NUM,Sets number of iterations of the clustering k-medoids algorithm.,100,,int
--filtering-number,NUM,Sets number of low-energy models from trajectories to be clustered (default 1000),1000,,int
--filtering-fromeach,,Picks (filtering-number/replicas) models from each replica. If False picks (filtering-number) low-energy models from the whole trajectory. ,,store_true,
--clustering-medoids,NUM,Sets number of medoids in k-medoids clustering algorithm.,10,,int
--load-cabs-files,FILE,"Loads CABSdock simulation files and allows for repeated scoring and analysis of CABSdock trajectories (with new settings, for example using a reference complex structure and --reference option). ",,,
--contact-maps,,"Stores contact maps matrix plots and histograms of contact frequencies.
",,store_true,
--align,METHOD,"Method to be used to align terget with reference pdb. Available options are: SW -- Smith-Waterman (default), blastp -- protein BLAST (requires NCBI+ package installed), trivial -- simple sequential alignment, used only in case of one-chain input and reference of the same length.
",SW,,
--alignment-options,KEY1=VAL1 KEY2=VAL2...,Path to alignment with reference structure. If set 'align' option is ignored.,[],append,lambda x: x.split('=')
--alignment-peptide-options,KEY1=VAL1 KEY2=VAL2...,Path to alignment with reference structure. If set 'align' option is ignored.,[],append,lambda x: x.split('=')
--cc-threshold,NUM,Cmap contact criterion for side chain (SC) distance threshold.,6.5,,float
,,,,,
#group,OUTPUT OPTIONS,Output options,,,
--output-models,NUM,set number of final models to be generated,10,,int
--output-clusters,,save pdb files with clusters,,store_true,
--output-trajectories,,save pdb files with trajectories,,store_true,
,,,,,
#group,MISCELLANEOUS OPTIONS,Miscellaneous options,,,
"-c, --config",CONFIG,read options from configuration file CONFIG,,,
--image-file-format,FMT,produces all the image files in given format,svg,,
--work-dir,DIR,set working directory to DIR,.,,
--dssp-command,PATH,provide path to dssp binary,mkdssp,,
--fortran-command,PATH,provide path to fortran compiler binary,gfortran,,
--save-config-file,PATH,"generates a config file that may be used to re-run the docking or, together with TRAF and SEQ output files (see --save-cabs-files option), to run analysis on finished jobs (see --load-cabs-files option).",,,
--save-cabs-files,,save CABSdock simulation files,,store_true,
"-V, --verbose",VERBOSITY,"Controls how explicit the program output is, -1 for silent mode (only critical messages), 3 for maximum verbosity, default 1.",1,,int
